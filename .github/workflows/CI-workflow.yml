name: CI Phase

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]

jobs:
  build-and-snyk:
    uses: DUT-21TDT/Star/.github/workflows/Confirm-workflow.yml@SSMP-31-Implement-CI-CD-pipeline

  approval:
    needs: build-and-snyk
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/SSMP-31-Implement-CI-CD-pipeline'
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      ECR_URL: ${{ secrets.ECR_URL }}
      DATASOURCE_URL: ${{ secrets.DATASOURCE_URL }}
      DATASOURCE_USERNAME: ${{ secrets.DATASOURCE_USERNAME }}
      DATASOURCE_PASSWORD: ${{ secrets.DATASOURCE_PASSWORD }}
      ECR_SERVER_URL: ${{ secrets.ECR_SERVER_URL }}
      ECR_CLIENT_URL: ${{ secrets.ECR_CLIENT_URL }}
      VITE_BASE_URL: ${{ secrets.VITE_BASE_URL }}
      VITE_BACKEND_URL: ${{ secrets.VITE_BACKEND_URL }}
      VITE_BACKEND_AUTH_URL: ${{ secrets.VITE_BACKEND_AUTH_URL }}
      VITE_CLIENT_ID: ${{ secrets.VITE_CLIENT_ID }}
      VITE_REDIRECT_URI: ${{ secrets.VITE_REDIRECT_URI }}
      VITE_TOKEN_URL: ${{ secrets.VITE_TOKEN_URL }}
      VITE_CLIENT_SECRET: ${{ secrets.VITE_CLIENT_SECRET }}

    runs-on: ubuntu-latest

    steps:
      - uses: benjlevesque/short-sha@v3.0
        id: short-sha
        with:
          length: 6

      - name: test
        run: echo "Hello, World!"

      # - name: Extract branch name
      #   shell: bash
      #   run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
      #   id: extract_branch

      # - name: Check Docker version
      #   run: docker --version

      # - name: Build server
      #   env:
      #     SHA: ${{ steps.short-sha.outputs.sha }}
      #     BRANCH: ${{ steps.extract_branch.outputs.branch }}
      #   run: |
      #     cd server
      #     docker build -t star_server:"${{ env.BRANCH }}-${{ env.SHA }}" .
      #     docker tag star_server:"${{ env.BRANCH }}-${{ env.SHA }}" "${{ env.ECR_SERVER_URL }}":"${{ env.BRANCH }}-${{ env.SHA }}"
      #     aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ env.ECR_URL }}
      #     docker push "${{ env.ECR_SERVER_URL }}:${{ env.BRANCH }}-${{ env.SHA }}"
      #   continue-on-error: false

      # - name: Build client
      #   env:
      #     SHA: ${{ steps.short-sha.outputs.sha }}
      #     BRANCH: ${{ steps.extract_branch.outputs.branch }}
      #   run: |
      #     cd client
      #     docker build -t star_client:"${{ env.BRANCH }}-${{ env.SHA }}" .
      #     docker tag star_client:"${{ env.BRANCH }}-${{ env.SHA }}" "${{ env.ECR_CLIENT_URL }}":"${{ env.BRANCH }}-${{ env.SHA }}"
      #     aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ env.ECR_URL }}
      #     docker push "${{ env.ECR_CLIENT_URL }}:${{ env.BRANCH }}-${{ env.SHA }}"
      #   continue-on-error: false
