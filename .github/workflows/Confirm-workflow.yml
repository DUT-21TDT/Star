name: Build and Snyk Security

on:
  push:
    branches: ["*"]

jobs:
  build-and-snyk:
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      ECR_URL: ${{ secrets.ECR_URL }}
      DATASOURCE_URL: ${{ secrets.DATASOURCE_URL }}
      DATASOURCE_USERNAME: ${{ secrets.DATASOURCE_USERNAME }}
      DATASOURCE_PASSWORD: ${{ secrets.DATASOURCE_PASSWORD }}
      ECR_SERVER_URL: ${{ secrets.ECR_SERVER_URL }}
      ECR_CLIENT_URL: ${{ secrets.ECR_CLIENT_URL }}
      VITE_BASE_URL: ${{ secrets.VITE_BASE_URL }}
      VITE_BACKEND_URL: ${{ secrets.VITE_BACKEND_URL }}
      VITE_BACKEND_AUTH_URL: ${{ secrets.VITE_BACKEND_AUTH_URL }}
      VITE_CLIENT_ID: ${{ secrets.VITE_CLIENT_ID }}
      VITE_REDIRECT_URI: ${{ secrets.VITE_REDIRECT_URI }}
      VITE_TOKEN_URL: ${{ secrets.VITE_TOKEN_URL }}
      VITE_CLIENT_SECRET: ${{ secrets.VITE_CLIENT_SECRET }}
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Pre-build Client
      - name: Pre-build Client
        run: |
          cd client
          touch .env
          echo "VITE_BASE_URL=${{ env.VITE_BASE_URL }}" >> .env
          echo "VITE_BACKEND_URL=${{ env.VITE_BACKEND_URL }}" >> .env
          echo "VITE_BACKEND_AUTH_URL=${{ env.VITE_BACKEND_AUTH_URL }}" >> .env
          echo "VITE_CLIENT_ID=${{ env.VITE_CLIENT_ID }}" >> .env
          echo "VITE_REDIRECT_URI=${{ env.VITE_REDIRECT_URI }}" >> .env
          echo "VITE_TOKEN_URL=${{ env.VITE_TOKEN_URL }}" >> .env
          echo "VITE_CLIENT_SECRET=${{ env.VITE_CLIENT_SECRET }}" >> .env
          npm install
          npm run build
        continue-on-error: false

      # Pre-build Server
      - name: Pre-build Server
        run: |
          cd server/src/main/resources
          echo "DATASOURCE_URL=${{ env.DATASOURCE_URL }}" >> application.properties
          echo "DATASOURCE_USERNAME=${{ env.DATASOURCE_USERNAME }}" >> application.properties
          echo "DATASOURCE_PASSWORD=${{ env.DATASOURCE_PASSWORD }}" >> application.properties
          cd ../..
          pwd
          chmod +x gradlew
          ./gradlew build
        continue-on-error: false

      # Snyk Setup and Test for Java
      - name: Set up Snyk CLI
        uses: snyk/actions/setup@806182742461562b67788a64410098c9d9b96adb

      - name: Snyk test for Java
        run: |
          cd server
          snyk test --all-projects --sarif-file-output=snyk-java.sarif || true

      # Snyk Setup and Test for React
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Node.js dependencies
        run: |
          cd client
          npm install

      - name: Snyk test for React
        run: |
          cd client
          snyk test --sarif-file-output=snyk-react.sarif || true

      - name: Trigger deployment approval
        uses: actions/github-script@v6
        with:
          script: |
            const result = await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow: 'CI-workflow.yml',
              ref: context.ref,
            });
            console.log('Triggered deployment approval workflow', result);
